{"version":3,"file":"google-cloud-http.js","sources":["../../../src/google-cloud-http.ts"],"sourcesContent":["import type * as common from '@google-cloud/common';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n} from '@sentry/core';\nimport { startInactiveSpan } from '@sentry/node';\nimport type { Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { fill } from '@sentry/utils';\n\ntype RequestOptions = common.DecorateRequestOptions;\ntype ResponseCallback = common.BodyResponseCallback;\n// This interace could be replaced with just type alias once the `strictBindCallApply` mode is enabled.\ninterface RequestFunction extends CallableFunction {\n  (reqOpts: RequestOptions, callback: ResponseCallback): void;\n}\n\nconst INTEGRATION_NAME = 'GoogleCloudHttp';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _googleCloudHttpIntegration = ((options: { optional?: boolean } = {}) => {\n  const optional = options.optional || false;\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const commonModule = require('@google-cloud/common') as typeof common;\n        fill(commonModule.Service.prototype, 'request', wrapRequestFunction);\n      } catch (e) {\n        if (!optional) {\n          throw e;\n        }\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const googleCloudHttpIntegration = defineIntegration(_googleCloudHttpIntegration);\n\n/**\n * Google Cloud Platform service requests tracking for RESTful APIs.\n *\n * @deprecated Use `googleCloudHttpIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GoogleCloudHttp = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  googleCloudHttpIntegration,\n) as IntegrationClass<Integration>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type GoogleCloudHttp = typeof GoogleCloudHttp;\n\n/** Returns a wrapped function that makes a request with tracing enabled */\nfunction wrapRequestFunction(orig: RequestFunction): RequestFunction {\n  return function (this: common.Service, reqOpts: RequestOptions, callback: ResponseCallback): void {\n    const httpMethod = reqOpts.method || 'GET';\n    const span = SETUP_CLIENTS.has(getClient() as Client)\n      ? startInactiveSpan({\n          name: `${httpMethod} ${reqOpts.uri}`,\n          onlyIfParent: true,\n          op: `http.client.${identifyService(this.apiEndpoint)}`,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.serverless',\n          },\n        })\n      : undefined;\n    orig.call(this, reqOpts, (...args: Parameters<ResponseCallback>) => {\n      if (span) {\n        span.end();\n      }\n      callback(...args);\n    });\n  };\n}\n\n/** Identifies service by its base url */\nfunction identifyService(apiEndpoint: string): string {\n  const match = apiEndpoint.match(/^https:\\/\\/(\\w+)\\.googleapis.com$/);\n  return match ? match[1] : apiEndpoint.replace(/^(http|https)?:\\/\\//, '');\n}\n"],"names":["fill","defineIntegration","convertIntegrationFnToClass","getClient","startInactiveSpan","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],"mappings":";;;;;;AAkBA,MAAM,gBAAA,GAAmB,iBAAiB,CAAA;AAC1C;AACA,MAAM,aAAc,GAAE,IAAI,OAAO,EAAmB,CAAA;AACpD;AACA,MAAM,2BAAA,IAA+B,CAAC,OAAO,GAA2B,EAAE,KAAK;AAC/E,EAAE,MAAM,QAAS,GAAE,OAAO,CAAC,QAAA,IAAY,KAAK,CAAA;AAC5C,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,gBAAgB;AAC1B,IAAI,SAAS,GAAG;AAChB,MAAM,IAAI;AACV;AACA,QAAQ,MAAM,YAAa,GAAE,OAAO,CAAC,sBAAsB,CAAE,EAAA;AAC7D,QAAQA,UAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,mBAAmB,CAAC,CAAA;AAC5E,OAAQ,CAAA,OAAO,CAAC,EAAE;AAClB,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB,UAAU,MAAM,CAAC,CAAA;AACjB,SAAQ;AACR,OAAM;AACN,KAAK;AACL,IAAI,KAAK,CAAC,MAAM,EAAE;AAClB,MAAM,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;AACrC,KAAK;AACL,GAAG,CAAA;AACH,CAAC,CAAE,EAAA;AACH;MACa,0BAA2B,GAAEC,sBAAiB,CAAC,2BAA2B,EAAC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AAC+BC,gCAA2B;AAC1D,EAAE,gBAAgB;AAClB,EAAE,0BAA0B;AAC5B,CAAE,EAAA;AACF;AACA;;AAGA;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAoC;AACrE,EAAE,OAAO,WAAgC,OAAO,EAAkB,QAAQ,EAA0B;AACpG,IAAI,MAAM,UAAW,GAAE,OAAO,CAAC,MAAA,IAAU,KAAK,CAAA;AAC9C,IAAI,MAAM,OAAO,aAAa,CAAC,GAAG,CAACC,cAAS,EAAG,EAAA;AAC/C,QAAQC,sBAAiB,CAAC;AAC1B,UAAU,IAAI,EAAE,CAAC,EAAA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,UAAA,YAAA,EAAA,IAAA;AACA,UAAA,EAAA,EAAA,CAAA,YAAA,EAAA,eAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AACA,UAAA,UAAA,EAAA;AACA,YAAA,CAAAC,qCAAA,GAAA,sBAAA;AACA,WAAA;AACA,SAAA,CAAA;AACA,QAAA,SAAA,CAAA;AACA,IAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,CAAA,GAAA,IAAA,KAAA;AACA,MAAA,IAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,GAAA,EAAA,CAAA;AACA,OAAA;AACA,MAAA,QAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA,SAAA,eAAA,CAAA,WAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,WAAA,CAAA,KAAA,CAAA,mCAAA,CAAA,CAAA;AACA,EAAA,OAAA,KAAA,GAAA,KAAA,CAAA,CAAA,CAAA,GAAA,WAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,CAAA;AACA;;;;"}