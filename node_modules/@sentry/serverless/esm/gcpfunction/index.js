import { defaultIntegrations as defaultIntegrations$1, getDefaultIntegrations as getDefaultIntegrations$1, SDK_VERSION, init as init$1 } from '@sentry/node';
import { googleCloudGrpcIntegration } from '../google-cloud-grpc.js';
import { googleCloudHttpIntegration } from '../google-cloud-http.js';
export { wrapHttpFunction } from './http.js';
export { wrapEventFunction } from './events.js';
export { wrapCloudEventFunction } from './cloud_events.js';

/** @deprecated Use `getDefaultIntegrations(options)` instead. */
const defaultIntegrations = [
  // eslint-disable-next-line deprecation/deprecation
  ...defaultIntegrations$1,
  googleCloudHttpIntegration({ optional: true }), // We mark this integration optional since '@google-cloud/common' module could be missing.
  googleCloudGrpcIntegration({ optional: true }), // We mark this integration optional since 'google-gax' module could be missing.
];

/** Get the default integrations for the GCP SDK. */
function getDefaultIntegrations(options) {
  return [
    ...getDefaultIntegrations$1(options),
    googleCloudHttpIntegration({ optional: true }), // We mark this integration optional since '@google-cloud/common' module could be missing.
    googleCloudGrpcIntegration({ optional: true }), // We mark this integration optional since 'google-gax' module could be missing.
  ];
}

/**
 * @see {@link Sentry.init}
 */
function init(options = {}) {
  const opts = {
    _metadata: {} ,
    defaultIntegrations: getDefaultIntegrations(options),
    ...options,
  };

  opts._metadata.sdk = opts._metadata.sdk || {
    name: 'sentry.javascript.serverless',
    integrations: ['GCPFunction'],
    packages: [
      {
        name: 'npm:@sentry/serverless',
        version: SDK_VERSION,
      },
    ],
    version: SDK_VERSION,
  };

  init$1(opts);
}

export { defaultIntegrations, getDefaultIntegrations, init };
//# sourceMappingURL=index.js.map
