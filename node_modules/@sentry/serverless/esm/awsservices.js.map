{"version":3,"file":"awsservices.js","sources":["../../../src/awsservices.ts"],"sourcesContent":["import { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport { getClient, startInactiveSpan } from '@sentry/node';\nimport type { Client, Integration, IntegrationClass, IntegrationFn, Span } from '@sentry/types';\nimport { fill } from '@sentry/utils';\n// 'aws-sdk/global' import is expected to be type-only so it's erased in the final .js file.\n// When TypeScript compiler is upgraded, use `import type` syntax to explicitly assert that we don't want to load a module here.\nimport type * as AWS from 'aws-sdk/global';\n\ntype GenericParams = { [key: string]: any }; // eslint-disable-line @typescript-eslint/no-explicit-any\ntype MakeRequestCallback<TResult> = (err: AWS.AWSError, data: TResult) => void;\n// This interace could be replaced with just type alias once the `strictBindCallApply` mode is enabled.\ninterface MakeRequestFunction<TParams, TResult> extends CallableFunction {\n  (operation: string, params?: TParams, callback?: MakeRequestCallback<TResult>): AWS.Request<TResult, AWS.AWSError>;\n}\ninterface AWSService {\n  serviceIdentifier: string;\n}\n\nconst INTEGRATION_NAME = 'AWSServices';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _awsServicesIntegration = ((options: { optional?: boolean } = {}) => {\n  const optional = options.optional || false;\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const awsModule = require('aws-sdk/global') as typeof AWS;\n        fill(awsModule.Service.prototype, 'makeRequest', wrapMakeRequest);\n      } catch (e) {\n        if (!optional) {\n          throw e;\n        }\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const awsServicesIntegration = defineIntegration(_awsServicesIntegration);\n\n/**\n * AWS Service Request Tracking.\n *\n * @deprecated Use `awsServicesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const AWSServices = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  awsServicesIntegration,\n) as IntegrationClass<Integration>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type AWSServices = typeof AWSServices;\n\n/**\n * Patches AWS SDK request to create `http.client` spans.\n */\nfunction wrapMakeRequest<TService extends AWSService, TResult>(\n  orig: MakeRequestFunction<GenericParams, TResult>,\n): MakeRequestFunction<GenericParams, TResult> {\n  return function (this: TService, operation: string, params?: GenericParams, callback?: MakeRequestCallback<TResult>) {\n    let span: Span | undefined;\n    const req = orig.call(this, operation, params);\n\n    if (SETUP_CLIENTS.has(getClient() as Client)) {\n      req.on('afterBuild', () => {\n        span = startInactiveSpan({\n          name: describe(this, operation, params),\n          onlyIfParent: true,\n          op: 'http.client',\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.serverless',\n          },\n        });\n      });\n      req.on('complete', () => {\n        if (span) {\n          span.end();\n        }\n      });\n    }\n\n    if (callback) {\n      req.send(callback);\n    }\n    return req;\n  };\n}\n\n/** Describes an operation on generic AWS service */\nfunction describe<TService extends AWSService>(service: TService, operation: string, params?: GenericParams): string {\n  let ret = `aws.${service.serviceIdentifier}.${operation}`;\n  if (params === undefined) {\n    return ret;\n  }\n  switch (service.serviceIdentifier) {\n    case 's3':\n      ret += describeS3Operation(operation, params);\n      break;\n    case 'lambda':\n      ret += describeLambdaOperation(operation, params);\n      break;\n  }\n  return ret;\n}\n\n/** Describes an operation on AWS Lambda service */\nfunction describeLambdaOperation(_operation: string, params: GenericParams): string {\n  let ret = '';\n  if ('FunctionName' in params) {\n    ret += ` ${params.FunctionName}`;\n  }\n  return ret;\n}\n\n/** Describes an operation on AWS S3 service */\nfunction describeS3Operation(_operation: string, params: GenericParams): string {\n  let ret = '';\n  if ('Bucket' in params) {\n    ret += ` ${params.Bucket}`;\n  }\n  return ret;\n}\n"],"names":[],"mappings":"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"}