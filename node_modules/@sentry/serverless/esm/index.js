import * as awslambda from './awslambda.js';
export { awslambda as AWSLambda };
import * as index from './gcpfunction/index.js';
export { index as GCPFunction };
export { AWSServices, awsServicesIntegration } from './awsservices.js';
export { DEFAULT_USER_INCLUDES, Handlers, Hub, Integrations, NodeClient, SDK_VERSION, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, addBreadcrumb, addEventProcessor, addGlobalEventProcessor, addIntegration, addRequestDataToEvent, anrIntegration, autoDiscoverNodePerformanceMonitoringIntegrations, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, consoleIntegration, contextLinesIntegration, continueTrace, createGetModuleFromFilename, createTransport, deepReadDirSync, defaultIntegrations, defaultStackParser, extractRequestData, extractTraceparentData, flush, functionToStringIntegration, getActiveSpan, getActiveTransaction, getClient, getCurrentHub, getCurrentScope, getDefaultIntegrations, getGlobalScope, getHubFromCarrier, getIsolationScope, getModuleFromFilename, getSentryRelease, getSpanStatusFromHttpCode, hapiIntegration, httpIntegration, inboundFiltersIntegration, init, isInitialized, lastEventId, linkedErrorsIntegration, localVariablesIntegration, makeMain, makeNodeTransport, metrics, modulesIntegration, nativeNodeFetchintegration, nodeContextIntegration, onUncaughtExceptionIntegration, onUnhandledRejectionIntegration, parameterize, requestDataIntegration, runWithAsyncContext, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setTag, setTags, setUser, spanStatusfromHttpCode, spotlightIntegration, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, startTransaction, withIsolationScope, withMonitor, withScope } from '@sentry/node';
//# sourceMappingURL=index.js.map
