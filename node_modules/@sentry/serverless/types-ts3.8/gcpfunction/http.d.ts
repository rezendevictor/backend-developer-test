import { AddRequestDataToEventOptions } from '@sentry/node';
import { HttpFunction, WrapperOptions } from './general';
type ParseRequestOptions = AddRequestDataToEventOptions['include'] & {
    serverName?: boolean;
    version?: boolean;
};
interface OldHttpFunctionWrapperOptions extends WrapperOptions {
    /**
     * @deprecated Use `addRequestDataToEventOptions` instead.
     */
    parseRequestOptions: ParseRequestOptions;
}
interface NewHttpFunctionWrapperOptions extends WrapperOptions {
    addRequestDataToEventOptions: AddRequestDataToEventOptions;
}
export type HttpFunctionWrapperOptions = OldHttpFunctionWrapperOptions | NewHttpFunctionWrapperOptions;
/**
 * Wraps an HTTP function handler adding it error capture and tracing capabilities.
 *
 * @param fn HTTP Handler
 * @param options Options
 * @returns HTTP handler
 */
export declare function wrapHttpFunction(fn: HttpFunction, wrapOptions?: Partial<HttpFunctionWrapperOptions>): HttpFunction;
export {};
//# sourceMappingURL=http.d.ts.map
